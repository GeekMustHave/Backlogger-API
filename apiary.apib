FORMAT: 1A
HOST: http://backlogger.us-west-2.elasticbeanstalk.com/

# Backlogger

Backlogger is a small web application used to track ideas for enhancements or improvement to the site.
The user can add new ideas to the backlog list.  There is no edit or reporting capability.

All of the responses in this API will be delivered from a **Mongo-Like** database (neDB).


## Backlogs Collection [/backlogs]

All of the responses in this collection will come from the **(backlog.db)** collection.

None of the requests in this collection require a paramter.

All of the requests in this collection refer to all of the backlogs in the database.



### Get All Backlogs [GET]

This call provides a list of *ALL* of the backlogs.  They are returned in ascensing (insertdate) order.

The _ID is the unique identifier for each backlog.


+ Response 200 (application/json)

        [
          {
            "person": "Kunal Shaw",
            "functionalarea": "Internal Review",
            "idea": "Federal mandate date could be a date in the past.",
            "insertdate": "03/12/2017",
            "_id": "ETgPzgB5PXV4z9FE"
          },
          {
            "person": "Kunal Shaw",
            "functionalarea": "Internal Review",
            "idea": "Login page\nChange Rukes",
            "insertdate": "04/12/2017",
            "_id": "EZjqWSJKC3dRqTRy"
          },
          {
            "person": "Hajnalka Mayer",
            "functionalarea": "Work Flow",
            "idea": "Add Routine Requests that can be directed to other than BIC if they are not projects (work orders - requests which can be completed within two business days or less).",
            "insertdate": "04/15/2017",
            "_id": "F1ryQie47X5Pk1Fu"
          }
        ]


## Backlog Collection [/backlog]

All of the responses in this collection will come from the **(backlog.db)** collection.

All of the requests in this collection refer to a **Single** backlog in the database.

All of the requests in this collection will require a **_id** parameter to specifiy which backlog is to be acted upon.

### Get Backlog [GET]

This call provides a list of a single backlog identified by it's (_id) value.

+ Response 200 (application/json)

        {
            "person": "Kunal Shaw",
            "functionalarea": "Internal Review",
            "idea": "Federal mandate date could be a date in the past.",
            "insertdate": "03/12/2017",
            "_id": "ETgPzgB5PXV4z9FE"
          }


### Modify Backlog [PATCH]

This call will modify an existing backlog identified by it's (_id) value.

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /backlog/error

    + Body

            {
                "errorMessage": "Your _id does **not** exist"
            }

### Delete Backlog [DELETE]

This call will delete an existing backlog identified by it's (_id) value

+ Response 200 (application/json)